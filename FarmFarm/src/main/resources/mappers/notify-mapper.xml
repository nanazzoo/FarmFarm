<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="notifyMapper">


	 <resultMap type="Notify" id="notify_rm">
        <!-- DB에서 PK에 해당하는 필드, 컬럼을 작성하는 태그 -->
	     <id property = "notifyNo" column="NOTIFY_NO"/>
	     <!-- 나머지 일반 컬럼 -->
	      <result property="notifyTypeNo" column="NOTIFY_TYPE_NO" />
	      <result property="notifyTitle" column="NOTIFY_TITLE" />
	      <result property="notifyContent" column="NOTIFY_CONTENT" />
	      <result property="notifyDate" column="NOTIFY_DATE" />
	      <result property="memberNo" column="MEMBER_NO" />
	      <result property="quickLink" column="QUICK_LINK" />
	      <result property="notifyStatus" column="NOTIFY_STATUS" />
	 </resultMap>
	 
	 <resultMap type="NotifyOrder" id="notifyOrder_rm">
        <!-- DB에서 PK에 해당하는 필드, 컬럼을 작성하는 태그 -->
	     <id property = "orderNo" column="ORDER_NO"/>
	     <!-- 나머지 일반 컬럼 -->
	      <result property="memberNo" column="MEMBER_NO" />
	      <result property="productName" column="PRODUCT_NAME" />
	      <result property="orderProductCount" column="ORDER_PRODUCT_COUNT" />
	 </resultMap>
	 
	 
	 
	 <!-- 알림을 DB에 저장 -->
	 <insert id="insertNewNotify" parameterType="edu.kh.farmfarm.notify.model.vo.Notify" useGeneratedKeys="true">
	 	INSERT INTO NOTIFY
	 	VALUES(SEQ_NOTIFY_NO.NEXTVAL, #{notifyTypeNo}, #{memberNo}, #{notifyContent}, DEFAULT, DEFAULT, #{quickLink})
	 	<selectKey keyProperty="notifyNo" resultType="_int" order="AFTER">
	 		SELECT SEQ_NOTIFY_NO.CURRVAL AS NOTIFY_NO
	 		FROM DUAL
	 		<!-- SELECT NOTIFY_TITLE FROM NOTIFY_TYPE WHERE NOTIFY_TYPE_NO = #{notifyTypeNo} -->
	 	</selectKey>
	 </insert>
	 
	 <!-- 알림 목록 조회(for nav widget, 최신 6개까지만) -->
	 <select id="selectNotifyWidgetList" parameterType="_int" resultMap="notify_rm">
	 	SELECT * FROM
	 	(SELECT NOTIFY_NO, NOTIFY_TYPE_NO, NOTIFY_CONTENT, QUICK_LINK, NOTIFY_STATUS,
	 		   CASE WHEN TO_CHAR(NOTIFY_DATE, 'YYYY-MM-DD') = TO_CHAR(CURRENT_DATE, 'YYYY-MM-DD') THEN TO_CHAR(NOTIFY_DATE, 'AM HH" : "MI')
	 		   ELSE TO_CHAR(NOTIFY_DATE, 'YYYY-MM-DD') END NOTIFY_DATE,
	 	       (SELECT NOTIFY_TITLE FROM NOTIFY_TYPE ALAT WHERE ALAT.NOTIFY_TYPE_NO = ALA.NOTIFY_TYPE_NO) AS NOTIFY_TITLE 
	 	FROM NOTIFY ALA
	 	WHERE MEMBER_NO = #{memberNo}
	 	AND NOTIFY_DATE > TRUNC(CURRENT_DATE, 'dd') - 30
	 	AND NOTIFY_STATUS != -1
	 	ORDER BY NOTIFY_NO DESC)
	 	<![CDATA[
		 	WHERE ROWNUM < 7
	 	]]>
	 </select>
	 
	 <!-- 내 알림 조회(for notify center) -->
	 <select id="selectNotifyList" parameterType="_int" resultMap="notify_rm">
	 	SELECT NOTIFY_NO, NOTIFY_TYPE_NO, NOTIFY_CONTENT, QUICK_LINK, NOTIFY_STATUS,
	 		   CASE WHEN TO_CHAR(NOTIFY_DATE, 'YYYY-MM-DD') = TO_CHAR(CURRENT_DATE, 'YYYY-MM-DD') THEN TO_CHAR(NOTIFY_DATE, 'AM HH"시" MI"분"')
	 		   ELSE TO_CHAR(NOTIFY_DATE, 'YYYY-MM-DD') END NOTIFY_DATE,
	 	       (SELECT NOTIFY_TITLE FROM NOTIFY_TYPE ALAT WHERE ALAT.NOTIFY_TYPE_NO = ALA.NOTIFY_TYPE_NO) AS NOTIFY_TITLE 
	 	FROM NOTIFY ALA
	 	WHERE MEMBER_NO = #{memberNo}
	 	AND NOTIFY_DATE > TRUNC(CURRENT_DATE, 'dd') - 30
	 	AND NOTIFY_STATUS != -1
	 	ORDER BY NOTIFY_NO DESC
	 </select>
	 
	 <!-- 내 알림 업데이트 -->
	<update id="updateNotify">
		UPDATE NOTIFY SET NOTIFY_STATUS = 0 WHERE NOTIFY_NO = #{notifyNo}
	</update>
	
	<!-- 내 알림 전부 다 업데이트 -->
	<update id="updateNotifyAll">
		UPDATE NOTIFY 
		SET NOTIFY_STATUS = 0 
		WHERE MEMBER_NO = (SELECT MEMBER_NO 
								 FROM "MEMBER"
								 WHERE MEMBER_NICKNAME = #{memberNickname})				
	</update>
	
	 <!-- 내 알림 삭제 -->
	<update id="deleteNotify">
		DELETE FROM NOTIFY WHERE NOTIFY_NO = #{notifyNo}
	</update>
	
	<!-- title 조회 -->
	<select id="selectNotifyTitle" parameterType="_int" resultType="string">
		SELECT NOTIFY_TITLE
		FROM NOTIFY_TYPE
		WHERE NOTIFY_TYPE_NO = #{notifyTypeNo}
	</select>
	
	
	<!-- 상품 주문 상태 변경 알림 -->
	<select id="selectTransaction" parameterType="_int" resultMap="notifyOrder_rm">
	 	SELECT * FROM
	 	(SELECT ORDER_NO,
	 		   (SELECT MEMBER_NO FROM "ORDER" O WHERE OP.ORDER_NO = O.ORDER_NO) AS MEMBER_NO,
	 		   (SELECT PRODUCT_NAME FROM "PRODUCT" P WHERE OP.PRODUCT_NO = P.PRODUCT_NO) AS PRODUCT_NAME,
	 		   (SELECT COUNT(*) FROM "ORDER_PRODUCT" WHERE ORDER_NO = #{orderNo}) AS ORDER_PRODUCT_COUNT
	 	FROM ORDER_PRODUCT OP
	 	WHERE ORDER_NO = #{orderNo}
	 	ORDER BY PRODUCT_NO)
	 	WHERE ROWNUM = 1
	</select>
	
</mapper>
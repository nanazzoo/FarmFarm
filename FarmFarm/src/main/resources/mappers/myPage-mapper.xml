<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="myPageMapper">


 <resultMap type="Comment" id="comment_rm">
        <!-- DB에서 PK에 해당하는 필드, 컬럼을 작성하는 태그 -->
     <id property = "commentNo" column="COMMENT_NO"/>
     <!-- 나머지 일반 컬럼 -->
      <result property="commentContent" column="COMMENT_CONTENT" />
      <result property="commentCount" column="COMMENT_COUNT" />
      <result property="commentDate" column="COMMENT_DATE" />
      <result property="boardNo" column="BOARD_NO" />
      <result property="boardTitle" column="BOARD_TITLE" />
      <result property="memberNo" column="MEMBER_NO" />
      <result property="commentParent" column="COMMENT_PARENT" />
      <result property="boardTypeNo" column="BOARD_TYPE_NO" />
  </resultMap>
  
   <resultMap type="Order" id="order_rm">
        <!-- DB에서 PK에 해당하는 필드, 컬럼을 작성하는 태그 -->
     <id property = "orderNo" column="ORDER_NO"/>
     <!-- 나머지 일반 컬럼 -->
      <result property="memberNo" column="MEMBER_NO" />
      <result property="orderDate" column="ORDER_DATE" />
      <result property="orderStatus" column="ORDER_STATUS" />
      <result property="invoiceNo" column="INVOICE_NO" />
      <result property="orderPrice" column="ORDER_PRICE" />
      
     <collection property="productList" 
		  javaType="java.util.ArrayList" ofType="Product"
		  select="selectProductList"
		  column = "{orderNo=ORDER_NO, memberNo=MEMBER_NO}"/>
  </resultMap>
  
  <!-- 팜팜 상품 resultMap -->
 <resultMap type="Product" id="product_rm">
        <!-- DB에서 PK에 해당하는 필드, 컬럼을 작성하는 태그 -->
     <id property = "productNo" column="PRODUCT_NO"/>
     <!-- 나머지 일반 컬럼 -->
      <result property="productName" column="PRODUCT_NAME" />
      <result property="productPrice" column="PRODUCT_PRICE" />
      <result property="productAmount" column="PRODUCT_AMOUNT" />
      <result property="productImg" column="PRODUCT_IMG" />       			  
      <result property="wishDate" column="WISH_DATE" />       			  
      <result property="reviewCheck" column="REVIEW_CHECK" />       			  
      <result property="productStatus" column="PRODUCT_STATUS" />       			  
  </resultMap>
  
  
 <resultMap type="Board" id="board_rm">
        <!-- DB에서 PK에 해당하는 필드, 컬럼을 작성하는 태그 -->
     <id property = "boardNo" column="BOARD_NO"/>
     <!-- 나머지 일반 컬럼 -->
      <result property="boardTitle" column="BOARD_TITLE" />
      <result property="boardDate" column="BOARD_DATE" />
      <result property="boardView" column="BOARD_VIEW" />
      <result property="memberNo" column="MEMBER_NO" />
      <result property="boardTypeNo" column="BOARD_TYPE_NO" />
      <result property="commentCount" column="COMMENT_COUNT" />
      <result property="thumbnail" column="BOARD_THUMBNAIL" />
      
  </resultMap>
  
  
   <!-- 팜팜 상품 리뷰 resultMap --> 
 <resultMap type="Review" id="review_rm">
        <!-- DB에서 PK에 해당하는 필드, 컬럼을 작성하는 태그 -->
     <id property = "reviewNo" column="REVIEW_NO"/>

     <!-- 나머지 일반 컬럼 -->
      <result property="reviewContent" column="REVIEW_CONTENT" />
      <result property="memberNo" column="MEMBER_NO" />
      <result property="productNo" column="PRODUCT_NO" />
      <result property="productName" column="PRODUCT_NAME" />
      <result property="createDate" column="CREATE_DATE" />
      <result property="likeCheck" column="LIKE_CHECK" />
      <result property="likeCount" column="LIKE_COUNT" />
      
      <result property="memberNickname" column="MEMBER_NICKNAME" />
      <result property="profileImg" column="PROFILE_IMG" />
      
      <collection property="imgList" 
      			  javaType="java.util.ArrayList" ofType="ReviewImg"
      			  select="selectReviewImgList"
      			  column = "REVIEW_NO"/>
  </resultMap>

 <!-- 팜팜 상품 리뷰 이미지 resultMap -->
 <resultMap type="ReviewImg" id="reviewImg_rm">
        <!-- DB에서 PK에 해당하는 필드, 컬럼을 작성하는 태그 -->
     <id property = "reviewImgNo" column="REVIEW_IMG_NO"/>

     <!-- 나머지 일반 컬럼 -->
      <result property="reviewImgPath" column="REVIEW_IMG_PATH" />
      <result property="reviewImgOrder" column="REVIEW_IMG_ORDER" />
      <result property="reviewNo" column="REVIEW_NO" />
  </resultMap>
  
  
	
	<!-- 작성 댓글 수 조회 -->
	<select id="commentCount" resultType="_int">
		SELECT COUNT(*) FROM "COMMENT"
		WHERE MEMBER_NO = #{memberNo}
		AND COMMENT_DEL_FL = 'N'
	</select>
	
	<!-- 작성 댓글 목록 조회 -->
	<select id="selectCommentList" resultMap="comment_rm">
		SELECT c.COMMENT_NO, c.COMMENT_CONTENT 
		, TO_CHAR(c.COMMENT_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') COMMENT_DATE
		, c.BOARD_NO , b.BOARD_TITLE ,
		(SELECT COUNT(*) FROM "COMMENT" c2 WHERE c2.BOARD_NO = b.BOARD_NO) COMMENT_COUNT, BOARD_TYPE_NO
		FROM "COMMENT" c
		JOIN BOARD b ON (c.BOARD_NO = b.BOARD_NO)
		WHERE c.MEMBER_NO = #{memberNo} 
		AND (COMMENT_DEL_FL = 'N' OR COMMENT_DEL_FL = 'S') 
		AND BOARD_DEL_FL = 'N'
		ORDER BY c.COMMENT_DATE DESC
	</select>
	
	
	<!-- 주문 수 조회 -->
	<select id="orderCount" resultType="_int">
		SELECT COUNT(*) FROM "ORDER" WHERE MEMBER_NO = #{memberNo}
	</select>
	
	<!-- 주문 목록 조회 -->
	<select id="selectOrderList" resultMap="order_rm">
		SELECT DISTINCT o.ORDER_NO , o.ORDER_DATE , ORDER_STATUS , MEMBER_NO, TO_CHAR(ORDER_PRICE, '999,999,999,999') ORDER_PRICE
		,(SELECT INVOICE_NO FROM ORDER_SHIPPING os WHERE os.ORDER_NO = o.ORDER_NO) INVOICE_NO
		FROM "ORDER" o
		JOIN ORDER_PRODUCT op ON (o.ORDER_NO = op.ORDER_NO)
		WHERE MEMBER_NO = #{memberNo}
		ORDER BY ORDER_NO DESC
	</select>
	
	<!-- 주문한 상품 목록 조회 -->
	<select id="selectProductList" resultMap="product_rm">
		SELECT op.PRODUCT_NO , op.PRODUCT_AMOUNT, PRODUCT_NAME, PRODUCT_PRICE, PRODUCT_STATUS,
			(SELECT PRODUCT_IMG_ADDRESS 
			FROM PRODUCT_IMG pi3 
			WHERE pi3.PRODUCT_NO = op.PRODUCT_NO 
			AND PRODUCT_IMG_ORDER = 0) PRODUCT_IMG,
			(SELECT COUNT(*) FROM REVIEW r 
			WHERE PRODUCT_NO = op.PRODUCT_NO AND MEMBER_NO = #{memberNo} AND ORDER_NO = #{orderNo}) REVIEW_CHECK
		FROM ORDER_PRODUCT op 
		JOIN PRODUCT p ON (op.PRODUCT_NO = p.PRODUCT_NO)
		WHERE ORDER_NO = #{orderNo}
	</select>
	
	
	
	<!-- 작성 게시글 수 조회 -->
	<select id="boardCount" resultType="_int">
		SELECT COUNT(*) FROM BOARD WHERE MEMBER_NO = #{memberNo} AND BOARD_DEL_FL = 'N'
	</select>
	
	
	<!-- 작성 게시글 목록 조회 -->
	<select id="selectBoardList" resultMap="board_rm">
		SELECT BOARD_NO , SUBSTRB(BOARD_TITLE,1,75) BOARD_TITLE , BOARD_DATE CREATE_DATE,
		TO_CHAR(BOARD_DATE, 'yyyy.MM.DD') BOARD_DATE, BOARD_VIEW, BOARD_TYPE_NO,
		(SELECT COUNT(*) FROM "COMMENT" c WHERE c.BOARD_NO = b.BOARD_NO) COMMENT_COUNT,
		(SELECT BOARD_IMG_ADDRESS FROM BOARD_IMG bi WHERE bi.BOARD_NO = b.BOARD_NO AND BOARD_IMG_ORDER = 0) BOARD_THUMBNAIL
		FROM BOARD b WHERE MEMBER_NO = #{memberNo} AND BOARD_DEL_FL ='N'
		<if test='sortFl.equals("V")'>
		ORDER BY BOARD_VIEW DESC, CREATE_DATE DESC
		</if>
		<if test='sortFl.equals("N")'>
		ORDER BY CREATE_DATE DESC, BOARD_VIEW DESC
		</if>
	</select>
	
	<!-- 작성 후기 수 조회 -->
	<select id="reviewCount" resultType="_int">
		SELECT COUNT(*) FROM REVIEW WHERE MEMBER_NO = #{memberNo} AND REVIEW_DEL_FL = 'N'
	</select>
	
	<!-- 작성 후기 목록 조회 -->
	<select id="selectReviewList" resultMap="review_rm">
		SELECT REVIEW_NO, REVIEW_CONTENT, PRODUCT_NO, PRODUCT_NAME, 
		TO_CHAR(CREATE_DATE, 'yyyy.MM.DD') CREATE_DATE,
		(SELECT COUNT(*) FROM REVIEW_LIKE rl WHERE rl.REVIEW_NO = r.REVIEW_NO) LIKE_COUNT
		FROM REVIEW r
		JOIN PRODUCT p USING(PRODUCT_NO)
		WHERE r.MEMBER_NO = #{memberNo} AND REVIEW_DEL_FL = 'N'
		ORDER BY CREATE_DATE DESC
	</select>
	
	<!-- 상품 리뷰 이미지 목록 조회 -->
	<select id="selectReviewImgList" resultMap="reviewImg_rm">
		SELECT * FROM REVIEW_IMG ri
		WHERE REVIEW_NO = #{reviewNo}
		ORDER BY REVIEW_IMG_ORDER
	</select>

	<!-- 찜 수 조회 -->
	<select id="wishCount" resultType="_int">
		SELECT COUNT(*) FROM WISH WHERE MEMBER_NO = #{memberNo}
	</select>
	
	<!-- 찜 목록 조회 -->
	<select id="selectWishList" resultMap="product_rm">
		SELECT w.PRODUCT_NO, PRODUCT_NAME, TO_CHAR(PRODUCT_PRICE, '999,999,999,999') PRODUCT_PRICE,
			TO_CHAR(WISH_DATE, 'yyyy.MM.DD') WISH_DATE,
			(SELECT PRODUCT_IMG_ADDRESS 
			FROM PRODUCT_IMG pi2 
			WHERE pi2.PRODUCT_NO = p.PRODUCT_NO 
			AND PRODUCT_IMG_ORDER = 0) PRODUCT_IMG
		FROM WISH w 
		JOIN PRODUCT p ON (p.PRODUCT_NO = w.PRODUCT_NO)
		WHERE MEMBER_NO = #{memberNo}
		ORDER BY WISH_DATE DESC
	</select>
	
	<!-- 찜 추가 -->
	<insert id="insertWish">
		INSERT INTO WISH
		VALUES(#{memberNo}, ${productNo}, DEFAULT)
	</insert>
	
	<!-- 찜 삭제 -->
	<delete id="deleteWish">
		DELETE FROM WISH
		WHERE MEMBER_NO = #{memberNo} 
		AND PRODUCT_NO = #{productNo}
	</delete>
	
	
	<!-- 마이 페이지 배경 사진 변경 -->
	<update id="updateBgImg">
		UPDATE "MEMBER" SET MYPAGE_IMG = #{mypageImg} WHERE MEMBER_NO = #{memberNo}
	</update>
	
	<!-- 마이 페이지 배경 사진 기본사진으로 변경 -->
	<update id="defaultBgImg">
		UPDATE "MEMBER" SET MYPAGE_IMG = '/resources/images/default/bgImg.png' 
		WHERE MEMBER_NO = #{memberNo}
	</update>
	
	<!-- 주문 구매 확정 -->
	<update id="orderConfirm">
		UPDATE "ORDER" SET ORDER_STATUS = 3 WHERE ORDER_NO = #{orderNo}
	</update>
	
	<!-- 리뷰 삽입 -->
	<insert id="insertReview" parameterType="review" useGeneratedKeys="true">
	
		<selectKey keyProperty="reviewNo" resultType="_int" order="BEFORE">
			SELECT SEQ_REVIEW_NO.NEXTVAL FROM DUAL
		</selectKey>
		
		INSERT INTO REVIEW
		VALUES(#{reviewNo}, #{reviewContent}, DEFAULT, #{memberNo}, #{productNo}, DEFAULT, #{orderNo})
		
	</insert>
	
	<!-- 리뷰 이미지 삽입 -->
	<insert id="insertReviewImgList" parameterType="list">
		INSERT INTO REVIEW_IMG
		SELECT SEQ_REVIEW_IMG_NO.NEXTVAL REVIEW_IMG_NO, A.* FROM
		<foreach collection="list" item="img" open="(" close=") A" separator="UNION ALL">
		SELECT #{img.reviewNo} REVIEW_NO,
			    #{img.reviewImgPath} REVIEW_IMG_PATH,
			    #{img.reviewImgOrder} REVIEW_IMG_ORDER
		FROM DUAL
		</foreach>
	</insert>
	
	<!-- 이미지 있는지 조회 -->
	<select id="checkimg" resultType="_int">
		SELECT COUNT(*) FROM "MEMBER"
		WHERE MEMBER_NO = #{memberNo}
	</select>
	
	<!-- 마이페이지 이미지 수정 -->
	<update id="updateImg">
		UPDATE "MEMBER" SET
		PROFILE_IMG = #{profileImg}
		WHERE MEMBER_NO = #{memberNo}
	</update>
	
	<!-- 마이페이지 닉네임 수정 -->
	<update id="updateMember">
		UPDATE "MEMBER" SET
		MEMBER_NICKNAME = #{memberNickname}
		WHERE MEMBER_NO = #{memberNo}
	</update>
	
	<!-- 마이페이지 주소 수정 -->
	<update id="updateAddress">
		UPDATE "ADDRESS" SET
		MEMBER_ADDRESS = #{memberAddress}
		WHERE MEMBER_NO = #{memberNo}
		AND DEFAULT_FL = 'Y'
	</update>

	<!-- 암호화 된 비밀번호 조회 -->
	<select id="selectEncPw" resultType="string">
		SELECT MEMBER_PW FROM "MEMBER"
		WHERE MEMBER_NO = #{memberNo}
	</select>

	<!-- 비밀번호 변경 -->
	<update id="updatePw">
		UPDATE "MEMBER" SET
		MEMBER_PW = #{newPw}
		WHERE MEMBER_NO = #{memberNo}
	</update>


	<!-- 회원 탈퇴 -->
	<update id="secession">
		UPDATE "MEMBER" SET
		MEMBER_DEL_FL = 'Y'
		WHERE MEMBER_NO = #{memberNo}
	</update>
	
	
	<!-- 배경 이미지 이름 조회 -->
	<select id="selectBgImageList" resultType="string">
		SELECT 
			SUBSTR(MYPAGE_IMG, INSTR(MYPAGE_IMG, '/', -1)+1, LENGTH(MYPAGE_IMG))
		FROM "MEMBER" m 
		WHERE MYPAGE_IMG IS NOT NULL
	</select>
	
	<!-- 프로필 이미지 이름 조회 -->
	<select id="selectProfileImageList" resultType="string">
		SELECT 
			SUBSTR(PROFILE_IMG , INSTR(PROFILE_IMG, '/', -1)+1, LENGTH(PROFILE_IMG)) 
		FROM "MEMBER" m 
		WHERE PROFILE_IMG IS NOT NULL
	</select>
	
	<!-- 리뷰 이미지 이름 조회 -->
	<select id="selectReviewImageList" resultType="string">
		SELECT
			SUBSTR(REVIEW_IMG_PATH , INSTR(REVIEW_IMG_PATH, '/', -1)+1, LENGTH(REVIEW_IMG_PATH)) 
		FROM REVIEW_IMG ri  
		WHERE REVIEW_IMG_PATH IS NOT NULL
	</select>

</mapper>
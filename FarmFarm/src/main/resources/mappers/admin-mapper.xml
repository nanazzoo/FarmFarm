<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="adminMapper">


 <resultMap type="Admin" id="admin_rm">
        <!-- DB에서 PK에 해당하는 필드, 컬럼을 작성하는 태그 -->
     <id property = "memberNo" column="MEMBER_NO"/>
     <!-- 나머지 일반 컬럼 -->
      <result property="memberId" column="MEMBER_ID" />
      <result property="memberPw" column="MEMBER_PW" />
      <result property="memberName" column="MEMBER_NAME" />
      <result property="memberNickname" column="MEMBER_NICKNAME" />
      <result property="to" column="MEMBER_TEL" />
      <result property="signUpDate" column="SIGNUP_DATE" />
      <result property="memberDelFl" column="MEMBER_DEL_FL" />
      <result property="memberBirth" column="MEMBER_BIRTH" />
      <result property="authority" column="AUTHORITY" />
      <result property="profileImg" column="PROFILE_IMG" />
      <result property="mypageImg" column="MYPAGE_IMG" />
      <result property="memberAddress" column="MEMBER_ADDRESS" />
      <result property="farmImg" column="FARM_IMG" />
      <result property="authDate" column="AUTH_DATE" />
      <result property="postCount" column="POST_COUNT" />
      <result property="boardCount" column="BOARD_COUNT" />
      <result property="commentCount" column="COMMENT_COUNT" />
      <result property="orderCount" column="ORDER_COUNT" />
      
      <result property="memberAddress" column="MEMBER_ADDRESS" />
      <result property="defaultFl" column="DEFAULT_FL" />

     	 <result property="reportNo" column="REPORT_NO" />
	     <result property="reportType" column="REPORT_TYPE" />
	     <result property="reportMemberNo" column="REPORT_MEMBER_NO" />
	     <result property="reportTargetNo" column="REPORT_TARGET_NO" />
	     <result property="reportReason" column="REPORT_REASON" />
	     <result property="reportDate" column="REPORT_DATE" />
	     <result property="reportPenalty" column="REPORT_PENALTY" />
	     <result property="processDate" column="PROCESS_DATE" />
	     <result property="reportContent" column="REPORT_CONTENT" />
	     <result property="title" column="TITLE" />
	     <result property="content" column="CONTENT" />
	     <result property="reportVolume" column="REPORT_VOLUME" />
	     <result property="contentNo" column="CONTENT_NO" />
	     
	     <result property ="boardNo" column="BOARD_NO"/>
       <result property="boardTitle" column="BOARD_TITLE" />
       <result property="boardContent" column="BOARD_CONTENT" />
       <result property="boardDelFl" column="BOARD_DEL_FL" />
       
       <result property= "postNo" column="POST_NO"/>
	     <result property="postTitle" column="POST_TITLE" />
	     <result property="postContent" column="POST_CONTENT" />
	     <result property="postDelFl" column="POST_DEL_FL" />
	     
	     <result property="commentMemberId" column="COMMENT_MEMBER_ID" />
	     <result property="commentBoardNo" column="COMMENT_BOARD_NO" />
	     <result property="boardType" column="BOARD_TYPE" />
	     
	     
	     <result property="authDenyReason" column="AUTH_DENY_REASON" />
	     
  </resultMap>
  
  


	<!-- 관리자인지 확인 -->
	<select id="checkAdmin" resultType="_int">
		SELECT COUNT(*)
		FROM "MEMBER" 
		WHERE AUTHORITY = 2
	</select>
	
	
	<!-- 판매자 인증중인 회원인지 확인 -->
	<select id="checkAuth" resultType="_int">
		SELECT COUNT(*)
		FROM "MEMBER"
		WHERE AUTHORITY = 3
		AND MEMBER_NO = #{memberNo}
	</select>
	


	<!-- 대시보드 -->
	<!-- 신규 주문 통계 -->
	<select id="newOrderStat" resultType="_int">
		SELECT COUNT(*)
		FROM "ORDER" 
		WHERE ORDER_STATUS = 0
	</select>
	
	<!-- 반품 진행중 -->
	<select id="returnStat" resultType="_int">
		SELECT COUNT(*)
		FROM RETURN
		WHERE RETURN_STATUS = 0
	</select>

	<!-- 미처리 신고 -->
	<select id="askReportStat" resultType="_int">
		SELECT COUNT(*)
		FROM REPORT 
		WHERE REPORT_PENALTY IS NULL
	</select>
	
	<!-- 판매자 인증 접수 -->
	<select id="authSellerStat" resultType="_int">
		SELECT COUNT(*)
		FROM "MEMBER" 
		WHERE AUTHORITY = 3
	</select>


	<!-- 전체 회원 수 (정렬 별로 포함)-->
	<select id="memberListCount" resultType="_int">
		SELECT COUNT(*)
		FROM (
			SELECT MEMBER_NO, MEMBER_ID, MEMBER_NAME, MEMBER_NICKNAME, MEMBER_TEL, MEMBER_DEL_FL, SIGNUP_DATE, AUTHORITY, PROFILE_IMG, MEMBER_BIRTH,
					MEMBER_ADDRESS, DEFAULT_FL, FARM_IMG, REPORT_NO, REPORT_TYPE, REPORT_MEMBER_NO, REPORT_TARGET_NO, REPORT_REASON, REPORT_DATE, REPORT_PENALTY, 
					PROCESS_DATE, REPORT_CONTENT, RANK() OVER(PARTITION BY REPORT_TARGET_NO ORDER BY REPORT_NO DESC) AS RANKING
			FROM MEMBER 
			LEFT JOIN ADDRESS USING(MEMBER_NO)
			LEFT JOIN SELLER USING(MEMBER_NO)
			LEFT JOIN REPORT ON (MEMBER_NO = REPORT_TARGET_NO)
			WHERE MEMBER_ID != 'admin'
			ORDER BY MEMBER_NO)
			WHERE RANKING = 1
			<if test='authFilter==0 and statFilter==0'> <!--전체 -->
			</if>
			<if test='authFilter==1'> <!--판매자인증: 미등록 -->
				AND AUTHORITY = 0
			</if>		
			<if test='authFilter==2'> <!--판매자인증: 판매자 -->
				AND AUTHORITY = 1
			</if>
			<if test='authFilter==3'> <!--판매자인증: 인증대기 -->
				AND AUTHORITY = 3
			</if>
			<if test='authFilter==4'> <!--판매자인증: 인증보류 -->
				AND AUTHORITY = 4
			</if>
			
			<if test='statFilter==1'> <!--상태: 활동중 -->
				AND MEMBER_DEL_FL = 'N'
				AND (REPORT_PENALTY IS NULL
				OR REPORT_PENALTY = 'N')
				AND REPORT_TYPE IS NULL
			</if>
			<if test='statFilter==2'> <!--상태: 신고접수 -->
				AND MEMBER_DEL_FL = 'N'
				AND REPORT_PENALTY IS NULL 
				AND REPORT_TYPE IS NOT NULL
			</if>
			<if test='statFilter==3'> <!--상태: 정지 -->
				AND MEMBER_DEL_FL = 'N'
				AND REPORT_PENALTY = 'Y' 
				AND PROCESS_DATE IS NOT NULL
			</if>
			<if test='statFilter==4'> <!--상태: 강제 탈퇴 -->
				AND MEMBER_DEL_FL = 'Y'
			</if>
			<if test='keyword != null'>
				AND (MEMBER_ID LIKE('%${keyword}%') OR MEMBER_ID LIKE LOWER('%${keyword}%') OR MEMBER_ID LIKE UPPER('%${keyword}%')
				OR 	MEMBER_NICKNAME LIKE ('%${keyword}%') OR MEMBER_NICKNAME LIKE LOWER('%${keyword}%') OR MEMBER_NICKNAME LIKE ('%${keyword}%')
				OR MEMBER_NO LIKE ('%${keyword}%'))
			</if>
	</select>

	
	<!-- 전체 회원 정보 조회 (정렬 별로 포함) -->
	<select id="selectMemberList" resultMap="admin_rm">
		SELECT *
		FROM (
			SELECT MEMBER_NO, MEMBER_ID, MEMBER_NAME, MEMBER_NICKNAME, MEMBER_TEL, MEMBER_DEL_FL, SIGNUP_DATE, AUTHORITY, PROFILE_IMG, MEMBER_BIRTH,
					REPLACE(MEMBER_ADDRESS, ',,', ' ') MEMBER_ADDRESS, DEFAULT_FL, FARM_IMG, REPORT_NO, REPORT_TYPE, REPORT_MEMBER_NO, REPORT_TARGET_NO, REPORT_REASON, REPORT_DATE, REPORT_PENALTY, 
					PROCESS_DATE, REPORT_CONTENT, RANK() OVER(PARTITION BY REPORT_TARGET_NO ORDER BY REPORT_NO DESC) AS RANKING
			FROM MEMBER 
			LEFT JOIN ADDRESS USING(MEMBER_NO)
			LEFT JOIN SELLER USING(MEMBER_NO)
			LEFT JOIN REPORT ON (MEMBER_NO = REPORT_TARGET_NO)
			WHERE MEMBER_ID != 'admin'
			AND DEFAULT_FL = 'Y'
			ORDER BY MEMBER_NO)
			WHERE RANKING = 1
			<if test='authFilter==0 and statFilter==0'> <!--전체 -->
			</if>
			<if test='authFilter==1'> <!--판매자인증: 미등록 -->
				AND AUTHORITY = 0
			</if>		
			<if test='authFilter==2'> <!--판매자인증: 판매자 -->
				AND AUTHORITY = 1
			</if>
			<if test='authFilter==3'> <!--판매자인증: 인증대기 -->
				AND AUTHORITY = 3
			</if>
			<if test='authFilter==4'> <!--판매자인증: 인증보류 -->
				AND AUTHORITY = 4
			</if>
			
			<if test='statFilter==1'> <!--상태: 활동중 -->
				AND MEMBER_DEL_FL = 'N'
				AND (REPORT_PENALTY IS NULL
				OR REPORT_PENALTY = 'N')
				AND REPORT_TYPE IS NULL
			</if>
			<if test='statFilter==2'> <!--상태: 신고접수 -->
				AND MEMBER_DEL_FL = 'N'
				AND REPORT_PENALTY IS NULL 
				AND REPORT_TYPE IS NOT NULL
			</if>
			<if test='statFilter==3'> <!--상태: 정지 -->
				AND MEMBER_DEL_FL = 'N'
				AND REPORT_PENALTY = 'Y' 
				AND PROCESS_DATE IS NOT NULL
			</if>
			<if test='statFilter==4'> <!--상태: 강제 탈퇴 -->
				AND MEMBER_DEL_FL = 'Y'
			</if>
			<if test='keyword != null'>
				AND (MEMBER_ID LIKE('%${keyword}%') OR MEMBER_ID LIKE LOWER('%${keyword}%') OR MEMBER_ID LIKE UPPER('%${keyword}%')
				OR 	MEMBER_NICKNAME LIKE ('%${keyword}%') OR MEMBER_NICKNAME LIKE LOWER('%${keyword}%') OR MEMBER_NICKNAME LIKE ('%${keyword}%')
				OR MEMBER_NO LIKE ('%${keyword}%'))
			</if>
	</select>
	
	
	<!-- 회원 상세 조회 (회원 정보)  -->
	<select id="selectMemberDetail" resultMap="admin_rm">
			SELECT *
			FROM (
				SELECT MEMBER_NO, MEMBER_ID, MEMBER_NAME, MEMBER_NICKNAME, MEMBER_TEL, MEMBER_DEL_FL, SIGNUP_DATE, AUTHORITY, PROFILE_IMG, MEMBER_BIRTH,
						REPLACE(MEMBER_ADDRESS, ',,', ' ') MEMBER_ADDRESS, DEFAULT_FL, FARM_IMG, REPORT_NO, REPORT_TYPE, REPORT_MEMBER_NO, REPORT_TARGET_NO, REPORT_REASON, REPORT_DATE, REPORT_PENALTY, 
						RANK() OVER(PARTITION BY REPORT_TARGET_NO ORDER BY REPORT_NO DESC) AS RANKING
				FROM MEMBER 
				LEFT JOIN ADDRESS USING(MEMBER_NO)
				LEFT JOIN SELLER USING(MEMBER_NO)
				LEFT JOIN REPORT ON (MEMBER_NO = REPORT_TARGET_NO)
				WHERE MEMBER_ID != 'admin'
				AND DEFAULT_FL = 'Y'
				ORDER BY MEMBER_NO)
			WHERE RANKING = 1
			AND MEMBER_NO = #{hiddenNo}
	</select>
	
	
	<!-- 회원 상세 조회 (계정 상태 변경 내역) -->
		<select id="selectMemberHistory" resultMap="admin_rm">
			SELECT *
			FROM (
				SELECT MEMBER_NO, MEMBER_ID, MEMBER_DEL_FL, SIGNUP_DATE, AUTHORITY, 
						 REPORT_NO, REPORT_TYPE, REPORT_MEMBER_NO, REPORT_TARGET_NO, REPORT_REASON, REPORT_DATE, REPORT_PENALTY, 
						PROCESS_DATE, REPORT_CONTENT, 
						RANK() OVER(PARTITION BY REPORT_TARGET_NO ORDER BY REPORT_NO DESC) AS RANKING
				FROM MEMBER 
				LEFT JOIN ADDRESS USING(MEMBER_NO)
				LEFT JOIN SELLER USING(MEMBER_NO)
				LEFT JOIN REPORT ON (MEMBER_NO = REPORT_TARGET_NO)
				WHERE MEMBER_ID != 'admin'
				AND DEFAULT_FL = 'Y'
				ORDER BY MEMBER_NO)
			WHERE MEMBER_NO = #{hiddenNo}
	</select>
	
	

	<!-- 판매자, 인증대기 수 -->
	<select id="sellerListCount" resultType="_int">
		SELECT COUNT(*)
		FROM "MEMBER" 
		LEFT JOIN ADDRESS USING(MEMBER_NO)
		LEFT JOIN "SELLER" USING(MEMBER_NO)
		<if test='sellerFilter == 0'>
			WHERE AUTHORITY = 3
		</if>
		<if test='sellerFilter == 1'>
			WHERE (AUTHORITY = 1 OR AUTHORITY = 3 OR AUTHORITY = 4)
		</if>
		<if test='keyword != null'>
				AND (MEMBER_ID LIKE('%${keyword}%') OR MEMBER_ID LIKE LOWER('%${keyword}%') OR MEMBER_ID LIKE UPPER('%${keyword}%')
				OR 	MEMBER_NICKNAME LIKE ('%${keyword}%') OR MEMBER_NICKNAME LIKE LOWER('%${keyword}%') OR MEMBER_NICKNAME LIKE ('%${keyword}%')
				OR MEMBER_NO LIKE ('%${keyword}%'))
		</if>
	</select>


	<!-- 판매자+인증대기 조회 -->
	<select id="selectSeller" resultMap="admin_rm">
		SELECT MEMBER_NO, MEMBER_ID, MEMBER_NAME, MEMBER_NICKNAME, MEMBER_TEL, MEMBER_BIRTH,
				REPLACE(MEMBER_ADDRESS, ',,', ' ') MEMBER_ADDRESS, MEMBER_DEL_FL, SIGNUP_DATE, AUTHORITY, FARM_IMG, AUTH_DATE, AUTH_DENY_REASON
		FROM "MEMBER" 
		LEFT JOIN ADDRESS USING(MEMBER_NO)
		LEFT JOIN "SELLER" USING(MEMBER_NO)
		LEFT JOIN "SELLER_AUTH" USING(MEMBER_NO)
		<if test='sellerFilter == 0'> <!-- 구매자 -->
			WHERE AUTHORITY = 3
		</if>
		<if test='sellerFilter == 1'> <!-- 판매자 OR 인증대기 OR 인증 보류-->
			WHERE (AUTHORITY = 1 OR AUTHORITY = 3 OR AUTHORITY = 4)
		</if>
		<if test='keyword != null'>
				AND (MEMBER_ID LIKE('%${keyword}%') OR MEMBER_ID LIKE LOWER('%${keyword}%') OR MEMBER_ID LIKE UPPER('%${keyword}%')
				OR 	MEMBER_NICKNAME LIKE ('%${keyword}%') OR MEMBER_NICKNAME LIKE LOWER('%${keyword}%') OR MEMBER_NICKNAME LIKE ('%${keyword}%')
				OR MEMBER_NO LIKE ('%${keyword}%'))
		</if>
	</select>
	
	
	<!-- 판매자 인증신청서 조회 -->
	<select id="selectAuthPaper" resultMap="admin_rm">
		SELECT MEMBER_NO, MEMBER_ID, MEMBER_NAME, MEMBER_NICKNAME, MEMBER_TEL, MEMBER_BIRTH, 
		REPLACE(MEMBER_ADDRESS, ',,', ' ') MEMBER_ADDRESS, MEMBER_DEL_FL, SIGNUP_DATE, AUTHORITY, FARM_IMG, AUTH_DATE, AUTH_DENY_REASON
		FROM "MEMBER" 
		LEFT JOIN ADDRESS USING(MEMBER_NO)
		LEFT JOIN "SELLER" USING(MEMBER_NO)
		LEFT JOIN "SELLER_AUTH" USING(MEMBER_NO)
		WHERE MEMBER_NO = #{hiddenNo}
	</select>
	
	
	<!-- 판매자 인증 승인 -->
	<update id="sellerApprove">
		UPDATE MEMBER SET
		AUTHORITY = 1
		WHERE MEMBER_NO = #{hiddenNo}
	</update>

	<!-- 판매자 인증 처리 시 처리 날짜 추가 -->
	<update id="updateAuthDate">
		UPDATE "SELLER" SET
		AUTH_DATE = SYSDATE
		WHERE MEMBER_NO = #{hiddenNo}
	</update>


	<!-- 판매자 인증 거절(보류) -->
	<update id="sellerDeny">
		UPDATE MEMBER SET
		AUTHORITY = 4
		WHERE MEMBER_NO = #{hiddenNo}
	</update>
	

	<!-- 해당 회원번호의 판매자 인증 사유가 있는지 확인 -->
	<select id="checkDenyReason" resultType="_int">
		SELECT COUNT(*) 
		FROM "SELLER_AUTH"
		WHERE MEMBER_NO = #{hiddenNo}
	</select>

	<!-- 판매자 인증 보류 사유 업데이트  -->
	<insert id="updateDenyReason">
		UPDATE "SELLER_AUTH" SET
		AUTH_DENY_REASON = #{denyReason}
		WHERE MEMBER_NO = #{hiddenNo}
	</insert>
	
	<!-- 판매자 인증 보류 사유 삽입  -->
	<insert id="insertDenyReason">
		INSERT INTO "SELLER_AUTH"
		VALUES(#{hiddenNo}, #{denyReason})
	</insert>
	
	
	
	<!-- 판매자 인증 보류 사유 가져오기 -->
	<select id="selectDenyReason" resultType="string">
		SELECT AUTH_DENY_REASON
		FROM SELLER_AUTH
		WHERE MEMBER_NO = #{memberNo}
	</select>
	
	
	<!-- 판매자 인증 이미지 업데이트 -->
	<update id="updateSellerImage">
		UPDATE "SELLER" SET
		FARM_IMG = #{farmImg}
		WHERE MEMBER_NO = #{memberNo}
	</update>
	
	
	
	
	<!-- 미처리 신고 개수 -->
	<select id="reportListCount" resultType="_int">
		SELECT COUNT(*)
		FROM (SELECT M.MEMBER_NO, M.MEMBER_ID, M.AUTHORITY, M.MEMBER_DEL_FL,  M.MEMBER_NICKNAME,
				REPORT_NO, REPORT_MEMBER_NO, REPORT_TARGET_NO, REPORT_REASON, REPORT_CONTENT, REPORT_DATE, REPORT_PENALTY, PROCESS_DATE,
				RANK() OVER(PARTITION BY REPORT_TARGET_NO ORDER BY REPORT_NO DESC) AS RANKING,
				RANK() OVER(PARTITION BY REPORT_TARGET_NO ORDER BY REPORT_NO) AS REPORT_VOLUME,
				B.BOARD_NO, BOARD_DEL_FL, POST_NO, POST_DEL_FL, REPORT_TYPE, COMMENT_NO, COMMENT_DEL_FL, 
				(CASE
					WHEN REPORT_TYPE = 'B' THEN B.BOARD_NO
					WHEN REPORT_TYPE = 'P' THEN POST_NO
					WHEN REPORT_TYPE = 'C' THEN COMMENT_NO
				END 
				) CONTENT_NO,
				(CASE
					WHEN REPORT_TYPE = 'B' THEN BOARD_TITLE
					WHEN REPORT_TYPE = 'P' THEN POST_TITLE
				END 
				) TITLE,
				(CASE
					WHEN REPORT_TYPE = 'B' THEN BOARD_CONTENT
					WHEN REPORT_TYPE = 'P' THEN POST_CONTENT
					WHEN REPORT_TYPE = 'C' THEN COMMENT_CONTENT
				END 
				) CONTENT,
				(CASE 
					WHEN REPORT_TYPE = 'C' THEN MC.MEMBER_ID
				END
				) COMMENT_MEMBER_ID,
				(CASE
					WHEN REPORT_TYPE = 'C' THEN C.BOARD_NO
				END
				) COMMENT_BOARD_NO,
				(CASE
					WHEN REPORT_TYPE = 'B' THEN BOARD_TYPE_NO
					WHEN REPORT_TYPE = 'C' THEN (SELECT BOARD_TYPE_NO FROM BOARD b WHERE b.BOARD_NO = C.BOARD_NO)
				END
				) BOARD_TYPE
				FROM REPORT R
				LEFT JOIN BOARD B ON(REPORT_TARGET_NO = BOARD_NO)
				LEFT JOIN MEMBER M ON(REPORT_TARGET_NO = M.MEMBER_NO)
				LEFT JOIN POST ON(REPORT_TARGET_NO = POST_NO)
				LEFT JOIN "COMMENT" C ON(REPORT_TARGET_NO = COMMENT_NO)
				LEFT JOIN MEMBER MC ON(MC.MEMBER_NO = C.MEMBER_NO))
		WHERE REPORT_PENALTY IS NULL
		AND RANKING = 1
	</select>
	
	
	
	<!-- 미처리 신고 조회 -->
	<select id="selectNewReport" resultMap="admin_rm">
		SELECT *
		FROM (SELECT M.MEMBER_NO, M.MEMBER_ID, M.AUTHORITY, M.MEMBER_DEL_FL, M.MEMBER_NICKNAME,
				REPORT_NO, REPORT_MEMBER_NO, REPORT_TARGET_NO, REPORT_REASON, REPORT_CONTENT, REPORT_DATE, REPORT_PENALTY, PROCESS_DATE,
				RANK() OVER(PARTITION BY REPORT_TARGET_NO ORDER BY REPORT_NO DESC) AS RANKING,
				RANK() OVER(PARTITION BY REPORT_TARGET_NO ORDER BY REPORT_NO) AS REPORT_VOLUME,
				B.BOARD_NO, BOARD_DEL_FL, POST_NO, POST_DEL_FL, REPORT_TYPE, COMMENT_NO, COMMENT_DEL_FL, 
				(CASE
					WHEN REPORT_TYPE = 'B' THEN B.BOARD_NO
					WHEN REPORT_TYPE = 'P' THEN POST_NO
					WHEN REPORT_TYPE = 'C' THEN COMMENT_NO
				END 
				) CONTENT_NO,
				(CASE
					WHEN REPORT_TYPE = 'B' THEN BOARD_TITLE
					WHEN REPORT_TYPE = 'P' THEN POST_TITLE
				END 
				) TITLE,
				(CASE
					WHEN REPORT_TYPE = 'B' THEN BOARD_CONTENT
					WHEN REPORT_TYPE = 'P' THEN POST_CONTENT
					WHEN REPORT_TYPE = 'C' THEN COMMENT_CONTENT
				END 
				) CONTENT,
				(CASE 
					WHEN REPORT_TYPE = 'C' THEN MC.MEMBER_ID
				END
				) COMMENT_MEMBER_ID,
				(CASE
					WHEN REPORT_TYPE = 'C' THEN C.BOARD_NO
				END
					) COMMENT_BOARD_NO,
				(CASE
					WHEN REPORT_TYPE = 'B' THEN BOARD_TYPE_NO
					WHEN REPORT_TYPE = 'C' THEN (SELECT BOARD_TYPE_NO FROM BOARD b WHERE b.BOARD_NO = C.BOARD_NO)
				END
				) BOARD_TYPE
				FROM REPORT R
				LEFT JOIN BOARD B ON(REPORT_TARGET_NO = BOARD_NO)
				LEFT JOIN MEMBER M ON(REPORT_TARGET_NO = M.MEMBER_NO)
				LEFT JOIN POST ON(REPORT_TARGET_NO = POST_NO)
				LEFT JOIN "COMMENT" C ON(REPORT_TARGET_NO = COMMENT_NO)
				LEFT JOIN MEMBER MC ON(MC.MEMBER_NO = C.MEMBER_NO))
		WHERE REPORT_PENALTY IS NULL
		AND RANKING = 1
		<if test='sortFilter != null and sortFilter != ""'>
			<choose>
				<when test='sortFilter == "up"'>
					ORDER BY REPORT_VOLUME ASC, REPORT_NO DESC
				</when>
				<when test='sortFilter == "down"'>
					ORDER BY REPORT_VOLUME DESC, REPORT_NO DESC
				</when>
				<when test='sortFilter == "default"'>
						ORDER BY REPORT_NO
				</when>
			</choose>
		</if>
	</select>



	<!-- 미처리 신고 상세 조회 -->
	<select id="selectNewReportDetail" resultMap="admin_rm">
		SELECT *
		FROM (SELECT M.MEMBER_NO, M.MEMBER_ID, M.AUTHORITY, M.MEMBER_DEL_FL, M.MEMBER_NICKNAME,
				REPORT_NO, REPORT_MEMBER_NO, REPORT_TARGET_NO, REPORT_REASON, REPORT_CONTENT, REPORT_DATE, REPORT_PENALTY, PROCESS_DATE,
				RANK() OVER(PARTITION BY REPORT_TARGET_NO ORDER BY REPORT_NO DESC) AS RANKING,
				RANK() OVER(PARTITION BY REPORT_TARGET_NO ORDER BY REPORT_NO) AS REPORT_VOLUME,
				B.BOARD_NO, BOARD_DEL_FL, POST_NO, POST_DEL_FL, REPORT_TYPE, COMMENT_NO, COMMENT_DEL_FL, 
				(CASE
					WHEN REPORT_TYPE = 'B' THEN B.BOARD_NO
					WHEN REPORT_TYPE = 'P' THEN POST_NO
					WHEN REPORT_TYPE = 'C' THEN COMMENT_NO
				END 
				) CONTENT_NO,
				(CASE
					WHEN REPORT_TYPE = 'B' THEN BOARD_TITLE
					WHEN REPORT_TYPE = 'P' THEN POST_TITLE
				END 
				) TITLE,
				(CASE
					WHEN REPORT_TYPE = 'B' THEN BOARD_CONTENT
					WHEN REPORT_TYPE = 'P' THEN POST_CONTENT
					WHEN REPORT_TYPE = 'C' THEN COMMENT_CONTENT
				END 
				) CONTENT,
				(CASE 
					WHEN REPORT_TYPE = 'C' THEN MC.MEMBER_ID
				END
				) COMMENT_MEMBER_ID,
				(CASE
					WHEN REPORT_TYPE = 'C' THEN C.BOARD_NO
				END
				) COMMENT_BOARD_NO,
				(CASE
					WHEN REPORT_TYPE = 'B' THEN BOARD_TYPE_NO
					WHEN REPORT_TYPE = 'C' THEN (SELECT BOARD_TYPE_NO FROM BOARD b WHERE b.BOARD_NO = C.BOARD_NO)
				END
				) BOARD_TYPE
				FROM REPORT R
				LEFT JOIN BOARD B ON(REPORT_TARGET_NO = BOARD_NO)
				LEFT JOIN MEMBER M ON(REPORT_TARGET_NO = M.MEMBER_NO)
				LEFT JOIN POST ON(REPORT_TARGET_NO = POST_NO)
				LEFT JOIN "COMMENT" C ON(REPORT_TARGET_NO = COMMENT_NO)
				LEFT JOIN MEMBER MC ON(MC.MEMBER_NO = C.MEMBER_NO))
		WHERE REPORT_PENALTY IS NULL
		AND RANKING = 1
		AND REPORT_NO = #{hiddenReportNo}
	</select>


	<!-- 신고 누적 조회 (회원)-->
	<select id="accumMemberList" resultMap="admin_rm">
		SELECT *
		FROM (SELECT M.MEMBER_NO, M.MEMBER_ID, M.AUTHORITY, M.MEMBER_DEL_FL,  M.MEMBER_NICKNAME,
				REPORT_NO, REPORT_MEMBER_NO, REPORT_TARGET_NO, REPORT_REASON, REPORT_CONTENT, REPORT_DATE, REPORT_PENALTY, PROCESS_DATE,
				RANK() OVER(PARTITION BY REPORT_TARGET_NO ORDER BY REPORT_NO DESC) AS RANKING,
				RANK() OVER(PARTITION BY REPORT_TARGET_NO ORDER BY REPORT_NO) AS REPORT_VOLUME,
				B.BOARD_NO, BOARD_DEL_FL, POST_NO, POST_DEL_FL, REPORT_TYPE, COMMENT_NO, COMMENT_DEL_FL, 
				(CASE
					WHEN REPORT_TYPE = 'B' THEN B.BOARD_NO
					WHEN REPORT_TYPE = 'P' THEN POST_NO
					WHEN REPORT_TYPE = 'C' THEN COMMENT_NO
				END 
				) CONTENT_NO,
				(CASE
					WHEN REPORT_TYPE = 'B' THEN BOARD_TITLE
					WHEN REPORT_TYPE = 'P' THEN POST_TITLE
				END 
				) TITLE,
				(CASE
					WHEN REPORT_TYPE = 'B' THEN BOARD_CONTENT
					WHEN REPORT_TYPE = 'P' THEN POST_CONTENT
					WHEN REPORT_TYPE = 'C' THEN COMMENT_CONTENT
				END 
				) CONTENT,
				(CASE 
					WHEN REPORT_TYPE = 'C' THEN MC.MEMBER_ID
				END
				) COMMENT_MEMBER_ID,
				(CASE
					WHEN REPORT_TYPE = 'C' THEN C.BOARD_NO
				END
				) COMMENT_BOARD_NO,
				(CASE
					WHEN REPORT_TYPE = 'B' THEN BOARD_TYPE_NO
					WHEN REPORT_TYPE = 'C' THEN (SELECT BOARD_TYPE_NO FROM BOARD b WHERE b.BOARD_NO = C.BOARD_NO)
				END
				) BOARD_TYPE
				FROM REPORT R
				LEFT JOIN BOARD B ON(REPORT_TARGET_NO = BOARD_NO)
				LEFT JOIN MEMBER M ON(REPORT_TARGET_NO = M.MEMBER_NO)
				LEFT JOIN POST ON(REPORT_TARGET_NO = POST_NO)
				LEFT JOIN "COMMENT" C ON(REPORT_TARGET_NO = COMMENT_NO)
				LEFT JOIN MEMBER MC ON(MC.MEMBER_NO = C.MEMBER_NO))
			WHERE REPORT_TYPE = 'M'
			AND REPORT_TARGET_NO = #{memberNo}
			<if test='allNew != null and allNew != ""'>
				<choose>
					<when test='allNew == "new"'>
							AND REPORT_PENALTY IS NULL
					</when>
					<when test='allNew == "all"'>
					</when>
				</choose>
			</if>
		ORDER BY REPORT_NO
	</select>

		<!-- 신고 누적 조회 (판매글, 커뮤니티게시글, 댓글)-->
	<select id="accumContentList" resultMap="admin_rm">
		SELECT *
		FROM (SELECT M.MEMBER_NO, M.MEMBER_ID, M.AUTHORITY, M.MEMBER_DEL_FL, M.MEMBER_NICKNAME,
				REPORT_NO, REPORT_MEMBER_NO, REPORT_TARGET_NO, REPORT_REASON, REPORT_CONTENT, REPORT_DATE, REPORT_PENALTY, PROCESS_DATE,
				RANK() OVER(PARTITION BY REPORT_TARGET_NO ORDER BY REPORT_NO DESC) AS RANKING,
				RANK() OVER(PARTITION BY REPORT_TARGET_NO ORDER BY REPORT_NO) AS REPORT_VOLUME,
				B.BOARD_NO, BOARD_DEL_FL, POST_NO, POST_DEL_FL, REPORT_TYPE, COMMENT_NO, COMMENT_DEL_FL, 
				(CASE
					WHEN REPORT_TYPE = 'B' THEN B.BOARD_NO
					WHEN REPORT_TYPE = 'P' THEN POST_NO
					WHEN REPORT_TYPE = 'C' THEN COMMENT_NO
				END 
				) CONTENT_NO,
				(CASE
					WHEN REPORT_TYPE = 'B' THEN BOARD_TITLE
					WHEN REPORT_TYPE = 'P' THEN POST_TITLE
				END 
				) TITLE,
				(CASE
					WHEN REPORT_TYPE = 'B' THEN BOARD_CONTENT
					WHEN REPORT_TYPE = 'P' THEN POST_CONTENT
					WHEN REPORT_TYPE = 'C' THEN COMMENT_CONTENT
				END 
				) CONTENT,
				(CASE 
					WHEN REPORT_TYPE = 'C' THEN MC.MEMBER_ID
				END
				) COMMENT_MEMBER_ID,
				(CASE
					WHEN REPORT_TYPE = 'C' THEN C.BOARD_NO
				END
				) COMMENT_BOARD_NO,
				(CASE
					WHEN REPORT_TYPE = 'B' THEN BOARD_TYPE_NO
					WHEN REPORT_TYPE = 'C' THEN (SELECT BOARD_TYPE_NO FROM BOARD b WHERE b.BOARD_NO = C.BOARD_NO)
				END
				) BOARD_TYPE
				FROM REPORT R
				LEFT JOIN BOARD B ON(REPORT_TARGET_NO = BOARD_NO)
				LEFT JOIN MEMBER M ON(REPORT_TARGET_NO = M.MEMBER_NO)
				LEFT JOIN POST ON(REPORT_TARGET_NO = POST_NO)
				LEFT JOIN "COMMENT" C ON(REPORT_TARGET_NO = COMMENT_NO)
				LEFT JOIN MEMBER MC ON(MC.MEMBER_NO = C.MEMBER_NO))
		WHERE REPORT_TYPE = #{reportType}
		AND REPORT_TARGET_NO = #{contentNo}
		<if test='allNew != null and allNew != ""'>
			<choose>
				<when test='allNew == "new"'>
						AND REPORT_PENALTY IS NULL
				</when>
				<when test='allNew == "all"'>
				</when>
			</choose>
		</if>
		ORDER BY REPORT_NO
	</select>






	<!-- 강제 탈퇴 -->	
	<update id="memberKickout">
		UPDATE MEMBER SET
		MEMBER_DEL_FL = 'Y'
		WHERE MEMBER_NO = #{hiddenNo}
	</update>
	
	
	<!-- 강제 탈퇴 계정 : 신고 상태 변경, 신고 처리일자 추가 -->
	<update id = "changeReportStatus">
		UPDATE REPORT SET
		REPORT_PENALTY = 'Y',
		PROCESS_DATE = SYSDATE
		WHERE REPORT_TYPE = 'M'
		AND REPORT_TARGET_NO = #{hiddenNo}
	</update>
	
	<!-- 판매자 강제 탈퇴 시, 판매글 삭제 -->
	<update id="deletePostofSeller">
		UPDATE POST SET
		POST_DEL_FL = 'Y'
		WHERE POST_DEL_FL = 'N'
		AND MEMBER_NO = #{hiddenNo}
	</update>
	
	
	
	<!-- 신고 계정 반려 -->
	<update id="reportMemberLeave">
		UPDATE REPORT SET
		REPORT_PENALTY = 'N',
		PROCESS_DATE = SYSDATE
		WHERE REPORT_TYPE = 'M'
		AND REPORT_TARGET_NO = #{hiddenNo}
	</update>
	
	
	<!-- 신고 커뮤니티 게시글 삭제 -->
	<update id="reportDeleteBoard">
		UPDATE BOARD SET
		BOARD_DEL_FL = 'Y'
		WHERE BOARD_NO = #{hiddenContentNo}
	</update>
	
	<!-- 신고 판매글 삭제 -->
	<update id="reportDeletePost">
		UPDATE "POST" SET
		POST_DEL_FL = 'Y'
		WHERE POST_NO = #{hiddenContentNo}
	</update>
	
	<!-- 신고 커뮤니티 댓글 삭제 -->
	<update id="reportDeleteComment">
		UPDATE "COMMENT" SET
		COMMENT_DEL_FL = 'Y',
		COMMENT_CONTENT = '관리자 권한으로 삭제된 댓글입니다.'
		WHERE COMMENT_NO = #{hiddenContentNo}
	</update>
	
	
	<!-- 신고 게시글 : 정지 후 신고 상태 변경, 신고 처리일자 추가   -->
	<update id="changeReportStatusCt">
		UPDATE REPORT SET
		REPORT_PENALTY = 'Y',
		PROCESS_DATE = SYSDATE
		WHERE REPORT_TYPE = #{reportType}
		AND REPORT_TARGET_NO = #{hiddenContentNo}
	</update>
	
	
	<!-- 신고 게시글 반려 -->
	<update id="reportLeaveContent">
		UPDATE REPORT SET
		REPORT_PENALTY = 'N',
		PROCESS_DATE = SYSDATE
		WHERE REPORT_TYPE = #{reportType}
		AND REPORT_TARGET_NO = #{hiddenContentNo}
	</update>
	
	
	<!-- 정지된 계정 리스트 조회 (스케쥴링)-->
	<select id="selectBannedAccountList" resultMap="admin_rm">
		SELECT *
		FROM (SELECT REPORT_NO,REPORT_TYPE, REPORT_TARGET_NO, REPORT_PENALTY, PROCESS_DATE,
				RANK() OVER(PARTITION BY REPORT_TARGET_NO ORDER BY REPORT_NO DESC) AS RANKING
		FROM REPORT
		LEFT JOIN MEMBER ON (REPORT_TARGET_NO = MEMBER_NO)
		WHERE REPORT_TYPE = 'M'
		AND REPORT_PENALTY = 'Y'
		AND MEMBER_DEL_FL = 'N')
		WHERE RANKING = 1
	</select>
	
	<!-- 정지된 계정 활성화(스케쥴링) -->
	<update id="activateAccount">
		UPDATE REPORT SET
		REPORT_PENALTY = 'A'
		WHERE REPORT_TYPE = 'M'
		AND REPORT_PENALTY = 'Y'
		AND REPORT_TARGET_NO = #{targetNo}
	</update>
	
	
	
	
	<!-- 전체 신고 내역 조회 -->
	<select id="selectReportAllList" resultMap="admin_rm">
			SELECT *
			FROM (SELECT M.MEMBER_NO, M.MEMBER_ID, M.AUTHORITY, M.MEMBER_DEL_FL, M.MEMBER_NICKNAME,
					REPORT_NO, REPORT_MEMBER_NO, REPORT_TARGET_NO, REPORT_REASON, REPORT_CONTENT, REPORT_DATE, REPORT_PENALTY, PROCESS_DATE,
					RANK() OVER(PARTITION BY REPORT_TARGET_NO ORDER BY REPORT_NO DESC) AS RANKING,
					RANK() OVER(PARTITION BY REPORT_TARGET_NO ORDER BY REPORT_NO) AS REPORT_VOLUME,
					B.BOARD_NO, BOARD_DEL_FL, POST_NO, POST_DEL_FL, REPORT_TYPE, COMMENT_NO, COMMENT_DEL_FL, 
					(CASE
						WHEN REPORT_TYPE = 'B' THEN B.BOARD_NO
						WHEN REPORT_TYPE = 'P' THEN POST_NO
						WHEN REPORT_TYPE = 'C' THEN COMMENT_NO
					END 
					) CONTENT_NO,
					(CASE
						WHEN REPORT_TYPE = 'B' THEN BOARD_TITLE
						WHEN REPORT_TYPE = 'P' THEN POST_TITLE
					END 
					) TITLE,
					(CASE
						WHEN REPORT_TYPE = 'B' THEN BOARD_CONTENT
						WHEN REPORT_TYPE = 'P' THEN POST_CONTENT
						WHEN REPORT_TYPE = 'C' THEN COMMENT_CONTENT
					END 
					) CONTENT,
					(CASE 
						WHEN REPORT_TYPE = 'C' THEN MC.MEMBER_ID
					END
					) COMMENT_MEMBER_ID,
					(CASE
						WHEN REPORT_TYPE = 'C' THEN C.BOARD_NO
					END
					) COMMENT_BOARD_NO,
					(CASE
						WHEN REPORT_TYPE = 'B' THEN BOARD_TYPE_NO
						WHEN REPORT_TYPE = 'C' THEN (SELECT BOARD_TYPE_NO FROM BOARD b WHERE b.BOARD_NO = C.BOARD_NO)
					END
					) BOARD_TYPE
					FROM REPORT R
					LEFT JOIN BOARD B ON(REPORT_TARGET_NO = BOARD_NO)
					LEFT JOIN MEMBER M ON(REPORT_TARGET_NO = M.MEMBER_NO)
					LEFT JOIN POST ON(REPORT_TARGET_NO = POST_NO)
					LEFT JOIN "COMMENT" C ON(REPORT_TARGET_NO = COMMENT_NO)
					LEFT JOIN MEMBER MC ON(MC.MEMBER_NO = C.MEMBER_NO))
			WHERE RANKING = 1
			<if test='keyword != null'>
				AND (MEMBER_ID LIKE('%${keyword}%') OR MEMBER_ID LIKE LOWER('%${keyword}%') OR MEMBER_ID LIKE UPPER('%${keyword}%')
				OR MEMBER_NO LIKE ('%${keyword}%')
				OR TITLE LIKE ('%${keyword}%') OR TITLE LIKE LOWER('%${keyword}%') OR TITLE LIKE ('%${keyword}%'))
			</if>
			<if test='processFilter != null and processFilter != ""'>
			<choose>
				<when test='processFilter == 0'><!-- 전체 -->
				</when>
				<when test='processFilter == 1'><!-- 접수 -->
					AND REPORT_PENALTY IS NULL
				</when>
				<when test='processFilter == 2'><!-- 반려 -->
						AND REPORT_PENALTY = 'N'
				</when>
				<when test='processFilter == 3'><!-- 회원 정지 -->
						AND ((REPORT_PENALTY = 'Y' OR REPORT_PENALTY = 'A') AND REPORT_TYPE = 'M' AND MEMBER_DEL_FL = 'N')
				</when>
				<when test='processFilter == 4'><!-- 회원 탈퇴 -->
						AND MEMBER_DEL_FL = 'Y'
				</when>
				<when test='processFilter == 5'><!-- 게시글 삭제 -->
						AND (REPORT_PENALTY = 'Y' AND (REPORT_TYPE = 'B' OR REPORT_TYPE = 'P' OR REPORT_TYPE = 'C'))
				</when>
			</choose>
		</if>
			<if test='typeFilter != null and typeFilter != ""'>
			<choose>
				<when test='typeFilter == 0' > <!-- 전체 -->
					ORDER BY REPORT_NO
				</when>
				<when test='typeFilter == 1'> <!-- 일반 회원 -->
					AND REPORT_TYPE = 'M'
					AND AUTHORITY = 0
				</when>
				<when test='typeFilter == 2'> <!-- 판매자 -->
					AND REPORT_TYPE = 'M'
					AND AUTHORITY = 1
				</when>
				<when test='typeFilter == 3'> <!-- 판매 게시글 -->
					AND REPORT_TYPE = 'P'
				</when>
				<when test='typeFilter == 4'> <!-- 커뮤니티 게시글 -->
					AND REPORT_TYPE = 'B'
				</when>
				<when test='typeFilter == 5'> <!-- 커뮤니티 댓글 -->
					AND REPORT_TYPE = 'C'
				</when>
			</choose>
		</if>
		<if test='sortFilter != null and sortFilter != ""'>
			<choose>
				<when test='sortFilter == "up"'>
					ORDER BY REPORT_VOLUME ASC, REPORT_NO DESC
				</when>
				<when test='sortFilter == "down"'>
					ORDER BY REPORT_VOLUME DESC, REPORT_NO DESC
				</when>
				<when test='sortFilter == "default"'>
						ORDER BY REPORT_NO
				</when>
			</choose>
		</if>
	</select>
	
	
	
	<!-- 전체 신고 개수 -->
	<select id="reportAllCount" resultType="_int">
			SELECT COUNT(*)
			FROM (SELECT M.MEMBER_NO, M.MEMBER_ID, M.AUTHORITY, M.MEMBER_DEL_FL, 
					REPORT_NO, REPORT_MEMBER_NO, REPORT_TARGET_NO, REPORT_REASON, REPORT_CONTENT, REPORT_DATE, REPORT_PENALTY, PROCESS_DATE,
					RANK() OVER(PARTITION BY REPORT_TARGET_NO ORDER BY REPORT_NO DESC) AS RANKING,
					RANK() OVER(PARTITION BY REPORT_TARGET_NO ORDER BY REPORT_NO) AS REPORT_VOLUME,
					B.BOARD_NO, BOARD_DEL_FL, BOARD_TYPE_NO, POST_NO, POST_DEL_FL, REPORT_TYPE, COMMENT_NO, COMMENT_DEL_FL, 
					(CASE
						WHEN REPORT_TYPE = 'B' THEN B.BOARD_NO
						WHEN REPORT_TYPE = 'P' THEN POST_NO
						WHEN REPORT_TYPE = 'C' THEN COMMENT_NO
					END 
					) CONTENT_NO,
					(CASE
						WHEN REPORT_TYPE = 'B' THEN BOARD_TITLE
						WHEN REPORT_TYPE = 'P' THEN POST_TITLE
					END 
					) TITLE,
					(CASE
						WHEN REPORT_TYPE = 'B' THEN BOARD_CONTENT
						WHEN REPORT_TYPE = 'P' THEN POST_CONTENT
						WHEN REPORT_TYPE = 'C' THEN COMMENT_CONTENT
					END 
					) CONTENT,
					(CASE 
						WHEN REPORT_TYPE = 'C' THEN MC.MEMBER_ID
					END
					) COMMENT_MEMBER_ID,
					(CASE
						WHEN REPORT_TYPE = 'C' THEN C.BOARD_NO
					END
					) COMMENT_BOARD_NO,
					(CASE
						WHEN REPORT_TYPE = 'B' THEN BOARD_TYPE_NO
						WHEN REPORT_TYPE = 'C' THEN (SELECT BOARD_TYPE_NO FROM BOARD b WHERE b.BOARD_NO = C.BOARD_NO)
					END
					) BOARD_TYPE
					FROM REPORT R
					LEFT JOIN BOARD B ON(REPORT_TARGET_NO = BOARD_NO)
					LEFT JOIN MEMBER M ON(REPORT_TARGET_NO = M.MEMBER_NO)
					LEFT JOIN POST ON(REPORT_TARGET_NO = POST_NO)
					LEFT JOIN "COMMENT" C ON(REPORT_TARGET_NO = COMMENT_NO)
					LEFT JOIN MEMBER MC ON(MC.MEMBER_NO = C.MEMBER_NO))
			WHERE RANKING = 1
			<if test='keyword != null'>
				AND (MEMBER_ID LIKE('%${keyword}%') OR MEMBER_ID LIKE LOWER('%${keyword}%') OR MEMBER_ID LIKE UPPER('%${keyword}%')
				OR MEMBER_NO LIKE ('%${keyword}%')
				OR TITLE LIKE ('%${keyword}%') OR TITLE LIKE LOWER('%${keyword}%') OR TITLE LIKE ('%${keyword}%'))
			</if>
			<if test='processFilter != null and processFilter != ""'>
				<choose>
					<when test='processFilter == 0'>
							AND REPORT_PENALTY IS NULL
					</when>
					<when test='processFilter == 1'>
							AND REPORT_PENALTY = 'N'
					</when>
					<when test='processFilter == 2'>
							AND ((REPORT_PENALTY = 'Y' OR REPORT_PENALTY = 'A') 
										AND REPORT_TYPE = 'M' AND MEMBER_DEL_FL = 'N')
					</when>
					<when test='processFilter == 3'>
							AND MEMBER_DEL_FL = 'Y'
					</when>
					<when test='processFilter == 4'>
							AND (REPORT_PENALTY = 'Y' AND (REPORT_TYPE = 'B' OR REPORT_TYPE = 'P' OR REPORT_TYPE = 'C'))
					</when>
				</choose>
			</if>
			<if test='typeFilter != null and typeFilter != ""'>
			<choose>
				<when test='typeFilter == 0' > <!-- 전체 -->
					ORDER BY REPORT_NO
				</when>
				<when test='typeFilter == 1'> <!-- 일반 회원 -->
					AND REPORT_TYPE = 'M'
					AND AUTHORITY = 0
				</when>
				<when test='typeFilter == 2'> <!-- 판매자 -->
					AND REPORT_TYPE = 'M'
					AND AUTHORITY = 1
				</when>
				<when test='typeFilter == 3'> <!-- 판매 게시글 -->
					AND REPORT_TYPE = 'P'
				</when>
				<when test='typeFilter == 4'> <!-- 커뮤니티 게시글 -->
					AND REPORT_TYPE = 'B'
				</when>
				<when test='typeFilter == 5'> <!-- 커뮤니티 댓글 -->
					AND REPORT_TYPE = 'C'
				</when>
			</choose>
		</if>
		<if test='sortFilter != null and sortFilter != ""'>
			<choose>
				<when test='sortFilter == "up"'>
					ORDER BY REPORT_VOLUME ASC, REPORT_NO DESC
				</when>
				<when test='sortFilter == "down"'>
					ORDER BY REPORT_VOLUME DESC, REPORT_NO DESC
				</when>
				<when test='sortFilter == "default"'>
						ORDER BY REPORT_NO
				</when>
			</choose>
		</if>
	</select>
	
	
	
	<!-- 전체 신고 조회_ 상세 내역 -->
	<select id="selectReportDetail" resultMap="admin_rm">
			SELECT *
			FROM (SELECT M.MEMBER_NO, M.MEMBER_ID, M.AUTHORITY, M.MEMBER_DEL_FL, M.MEMBER_NICKNAME,
					REPORT_NO, REPORT_MEMBER_NO, REPORT_TARGET_NO, REPORT_REASON, REPORT_CONTENT, REPORT_DATE, REPORT_PENALTY, PROCESS_DATE,
					RANK() OVER(PARTITION BY REPORT_TARGET_NO ORDER BY REPORT_NO DESC) AS RANKING,
					RANK() OVER(PARTITION BY REPORT_TARGET_NO ORDER BY REPORT_NO) AS REPORT_VOLUME,
					B.BOARD_NO, BOARD_DEL_FL, POST_NO, POST_DEL_FL, REPORT_TYPE, COMMENT_NO, COMMENT_DEL_FL, 
					(CASE
						WHEN REPORT_TYPE = 'B' THEN B.BOARD_NO
						WHEN REPORT_TYPE = 'P' THEN POST_NO
						WHEN REPORT_TYPE = 'C' THEN COMMENT_NO
					END 
					) CONTENT_NO,
					(CASE
						WHEN REPORT_TYPE = 'B' THEN BOARD_TITLE
						WHEN REPORT_TYPE = 'P' THEN POST_TITLE
					END 
					) TITLE,
					(CASE
						WHEN REPORT_TYPE = 'B' THEN BOARD_CONTENT
						WHEN REPORT_TYPE = 'P' THEN POST_CONTENT
						WHEN REPORT_TYPE = 'C' THEN COMMENT_CONTENT
					END 
					) CONTENT,
					(CASE 
						WHEN REPORT_TYPE = 'C' THEN MC.MEMBER_ID
					END
					) COMMENT_MEMBER_ID,
					(CASE
						WHEN REPORT_TYPE = 'C' THEN C.BOARD_NO
					END
					) COMMENT_BOARD_NO,
					(CASE
						WHEN REPORT_TYPE = 'B' THEN BOARD_TYPE_NO
						WHEN REPORT_TYPE = 'C' THEN (SELECT BOARD_TYPE_NO FROM BOARD b WHERE b.BOARD_NO = C.BOARD_NO)
					END
					) BOARD_TYPE
					FROM REPORT R
					LEFT JOIN BOARD B ON(REPORT_TARGET_NO = BOARD_NO)
					LEFT JOIN MEMBER M ON(REPORT_TARGET_NO = M.MEMBER_NO)
					LEFT JOIN POST ON(REPORT_TARGET_NO = POST_NO)
					LEFT JOIN "COMMENT" C ON(REPORT_TARGET_NO = COMMENT_NO)
					LEFT JOIN MEMBER MC ON(MC.MEMBER_NO = C.MEMBER_NO))
				WHERE RANKING = 1
				AND REPORT_NO = #{hiddenReportNo}
	</select>
	
	



</mapper>